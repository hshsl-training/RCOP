---
title: "Accessing NCBI data with the Rentrez package"
subtitle: "R Community of Practice June 15 - July 20"
author: "Irmarie Fraticelli-Rodriguez"
date: "07/13/2023"

format:
  revealjs:
   theme: dark
   slide-number: true
   smaller: true
   scrollable: true
   preview-links: true
   code-fold: show
   code-overflow: wrap
footer: <https://www2.hshsl.umaryland.edu/cdabs/>

---


## Learning Objectives:

This section objectives are:

* Explore the Rentrez API documentation.
* Download Rentrez and learn basic search functions.
* Perform simple and Boolean searches.
* Extract data using Rentrez helper function and placing it into a dataframe.
* Create a CSV file using the extracted data from Rentez.

**Output of this session:**

* A CSV file with bibliographic data extracted from Rentrez.


# What is an Application Programming Interface?

* Is a way that two or more computers programs communicate with each other.

* An API can operate in different ways, but for this exercise we will be working under a HTTP Request Methods. What that means?

The HTTP Request Method is the format that the text should be arranged so that the two or more computers understand what is being requested. With an HTTP Protocol you can:

1. Get information
2. Post information which creates/updates a resource
3. Delete information
4. An many other functions...

## What is Rentrez?

* Rentrez is an R interface that allows its users to interact with NCBI API. 
* With Rentrez, you do not need to use any additional program or terminal to access NCBI Data. 
  * This means that you can request data from multiple databases (PubMed, SNP,Clinvar,SRA, Gene and others) in the same RStudio Session.

## Install and Load Rentrez

So, lets install and load rentrez in our RStudio.

```{r}
#| echo: true

#install.packages('rentrez')

library(rentrez)

```

Now that we know that we have installed the package and load it into Rstudio. Lets take a look at the documentation available about this this resource.

## Lets visit the [Rentrez Documentation](https://cran.r-project.org/web/packages/rentrez/rentrez.pdf)


This pdf provides details about each function that the R Package Rentrez has.

For each command you may find a description, usage example, arguments and return value type. 

**Remember that you can always use the `help(<function>)` in R to search command descriptions.** 

# Rentrez Functions

1. Rentrez Helper Functions
1. Rentrez Search Functions
1. Rentrez linking or contrasting database functions

**Not covered areas in this RCOP session**

1. Using `use_history` or `web_history` function arguments
1. Setting up an account with NCBI API to perform big data queries using API credentials. 
1. Fetch DNA sequences in fasta format
1. Fetch a parsed XML document
1. Using the entrez_links narrowing searches functionalities.

Reference: [Rentrez Tutorial](https://cran.r-project.org/web/packages/rentrez/vignettes/rentrez_tutorial.html) by David Winter


# Rentrez Helper Functions

-------------------------------------------------------------------

The functions listed below helps you learn a little bit more about Rentrez and NCBI Databases.

| Function                | Usage                                                |
|-------------------------|------------------------------------|
| entrez_dbs()            | List of Entrez Databases                             |
| entrez_db_summary()     | Brief description of what the database is            |
| entrez_db_searchable()  | Set of search fields that can used with this database |
| entrez_db_links()       | Set of databases that might contain linked records   |


# Performing searches in NCBI API

----------------------------------------------------------------

| Function                | Usage                              |                 
|-------------------------|------------------------------------|
| entrez_search()         | Allows you to perform simple or boolean searches |
| entrez_summary()        | Allows you to retrieve basic information about the records found |
| entrez_fetch()          |  Allows you to retrieve basic information about the records in an parsed XML format    |  
| extract_from_esummary() | Extract elements from a list of esummary records     |

## entrez_search()

Similar to PubMed, Rentrez allows you to perform simple or boolean searches using the same structure that you would use in the PubMed search bar. The allowed boolean terms are **AND, OR, and NOT**.

First lets learn the syntax for a simple and a boolean search:

**Simple Search:**

`entrez_search(db= "database name", term= "searchword[field]")`

**Boolean search:**

`entrez_search(db= "database name", term= "searchword[field] <boolean term> searchword[field]")`


## entrez_summary()

Now lets retrieve basic information about the records we collected in one of our searches. But, first lets learn the syntax of the entrez_summary function.

`entrez_summary(db="database name", id=, rettype = "xml")`


## entrez_fetch()

- Another way to get records from the NBCI API, is by using the entrez_fetch function. entrez_summary and entrez_fetch are almost the same function, both of them will help you extract data from the NCBI API. 

- The difference between entrez_summary and entrez_fetch is in the way both functions arranges the data in RStudio. The entrez_summary returns a dataframe with lists of records while entrez_fetch returns an XML document.

- For the entrez_summary function, rentrez has created a function that allows you to extract information from each metadata field avoiding the challenges that comes with navigating an XML parsed documents.


 Lets learn the syntax of the entrez_fetch function.

`entrez_fetch(db= "database name", id= , rettype= "xml")`


## extract_from_esummary()

This function helps you navigate through an XMLInternalDocument and extract elements from a list of esummary records. But, first lest learn the syntax of the extract_from_esummary function.

`extract_from_esummary(esummaries, elements, simplify = TRUE)`


# Contrasting NCBI Databases

## entrez_global_query()

The entrez_global_query() function allows you to search a term on all NCBI Entrez Databases.

The syntax for this function is

`entrez_global_query(term, config = NULL, ...)`

As you can see the function takes config= NULL as an argument, but we are not going to use that. The argument config in this context means the type of connection that you are requesting from the API, this could be GET or POST. In the entrez context if you are performing big data requests they recommend you to use a combination of web_history and config = POST arguments to not saturate their servers. They also ask for big data request to be done at night, again to not saturate their servers.


## entrez_links()

The entrez_link() function allows you to get links of related records from an NCBI database. This function uses a unique identifier or a set of unique identifiers to search related articles in other NCBI databases.

Lets have a look at the syntax of this function.

`entrez_link(dbfrom = "" , web_history = "" , id = "" , db = "", cmd = "", by_id = FALSE, config = "")`


# Excersice: Lets practice!

Now that we know how to use rentrez lets move this information to a friendly format! We are going to learn how to use Rentrez helper function to extract data from the XML given by the entrez_summary function

Our objective is to: 

1. Build your query: Identify your search terms, adequate database, search fields and perform the search using rentrez.
2. Get article/object summaries.
3. Select the values that you would like to save (example: author, title, source). 
4. Create and format a CSV or any other type of document appropriate for your search.


## STEP 1 
Build your query: Identify your search terms, adequate database, search fields and perform the search using rentrez.

```{r}
#| echo: true

#<YOUR ANSWER HERE>

```

## STEP 2 
Get article summaries

```{r}
#| echo: true

#<YOUR ANSWER HERE>
  
```

## STEP 3 
Select the values that you would like to save (example: author, title, source)

```{r}
#| echo: true

#<YOUR ANSWER HERE>
  
```

## STEP 4 
Create and format a CSV or any other type of document appropriate for your search.

```{r}
#| echo: true

#<YOUR ANSWER HERE>

```
