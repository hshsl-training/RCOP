{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;\f4\fnil\fcharset0 HelveticaNeue-Bold;\f5\fnil\fcharset0 .SFNS-Regular_wdth_opsz120000_GRAD_wght2580000;
}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red24\green26\blue30;
\red11\green90\blue124;\red11\green90\blue124;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\cssrgb\c12157\c13725\c15686;
\cssrgb\c0\c42931\c55996;\cssrgb\c0\c42931\c55996;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww28600\viewh14680\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \

\f1\b SLIDE 1: Title
\f0\b0 \
\
Hello! Welcome to our fifth meeting of our community of practice. \
\
Today we are going to learn a new RStudio package called Rentrez.\
So for this section we don\'92t need to download any data since we are going to get it directly from the internet using R. \
\
Also, all functions definition, syntax  including a small practice exercise are publish in our community of practice website which hopefully we can share the link in the chat.\
\
\'97\
\

\f1\b SLIDE 2: Learning Objectives
\f0\b0 \
\
So, to start  our learning objectives for this session are to: \
\
Explore the Rentrez API, get to know its documentation, learn how to perform basic searches,  extract data using Rentrez helper function and placing it into a dataframe.\
\
So at the end of this session, you should be able to create a CSV with Rentrez data.\
\
\'97\
\

\f1\b SLIDE 3: What is an Application Programming Interface?
\f0\b0 \
\
So, before discussing what Rentrez is and how we can use it, I want to introduce us to some technical infrastructure that Rentrez uses behind the scenes. \
\
And that is an Application Programming Interface or for short API. \
\
\pard\pardeftab720\sa320\partightenfactor0

\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 An API is a way that two or more computers, programs, communicate with each other.\
So if we want to communicate with an API successfully, we may need to follow certain instructions\'85\
Such as having the appropriate credentials to request information and\'85that the information requested is organized in the appropriate format.\cb1 \
\cb3 \
To visualize this, let\'92s imagine for a second that we are in a restaurant. \
An API would be the waiter who is running back and forth to the kitchen to deliver your food. \
You\'a0
\f3\b request
\f2\b0 \'a0information to a device, and the device returns request with a\'a0
\f3\b response
\f2\b0 .\
\
An API can operate in different ways, but for our context we will be working under a HTTP Request Method. \
And What that means for us?\
The HTTP Request Method is the format that the text should be arranged so that the two or more computers understand what is being requested. \
So with this protocol you can:\
\pard\pardeftab720\sa320\partightenfactor0

\f3\b \cf2 Get
\f2\b0 \'a0information\cb1 , \cb3 update a resource, d
\f3\b elete
\f2\b0 \'a0information\cb1 \'85\cb3 A many other functions\'85But don\'92t worry, usually to delete information you need to have appropriate credentials with the institution maintaining the database. \
In this session, we will be communicating with the NCBI database using the GET method, meaning we will be only asking questions to the database, requesting information, and the API is going to deliver to us responses. \
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\b \cf2 SLIDE 4: What is Rentrez?
\b0 \
If we were going to do this from scratch, we may end up with a few lines of code that sets up the connection, protocols of communication, urls, and credentials needed. \
Thankfully, we do not need to set up that part of the code, because RStudio has a package that manage that type of setup for us. \
Now, Rentrez is an R interface that allows its users to interact with NCBI API. \
With this R package, you do not need to use any additional program or terminal to access NCBI Data. \
This means that you can request data from multiple databases (PubMed, SNP,Clinvar,SRA, Gene and others) in the same RStudio Session.\
\'97\

\b SLIDE 5: Install and Load Rentrez\

\b0 So now, lets open our Rstudio and lets install rentrez and load it.
\fs32 \
\pard\pardeftab720\sa320\partightenfactor0

\fs36 \cf4 \cb3 \outl0\strokewidth0 [
\f4\b \cf5 LIVE SECTION COMMENT
\f2\b0 : AS WE HAVE DONE IN PREVIOUS SESSIONS, LET ME KNOW IF YOU ARE DONE WITH THIS STEP USING THE GREEN ARROW BUTTON THAT IS LOCATED UNDER REACTIONS.\cf4 ]\
\pard\pardeftab720\sa320\partightenfactor0
\cf4 \'97\cf4 \
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 6: Rentrez Documentation\

\f2\b0 Now that we have load Rentrez in Rstudio\'85 I want to take a moment to visit the Rentrez Documentation. \
And advice that I always give no matter if you are starting to learning R or you are an expert, is to always look at the documentation of a package\'85 as a way to review what you have learned or to keep yourself updates with new changes. \
So, this pdf provides details about each function that the R Package Rentrez has. For each command you may find a description, usage example, arguments and return value type. \
Also, remember that you can always use the `help(<function>)` in R to search command descriptions.\cf2 \cb3 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sa320\partightenfactor0
\cf4 \cb3 \outl0\strokewidth0 [
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf4 help(<function>)\cf6  \cf4 ]\
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 7: Rentrez Functions\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 So the way that I have seen that most tutorials divide the functionalities of this package is by arranging them into three categories\
Rentrez Helper Functions\'85 Rentrez Search Functions\'85And Rentrez linking or contrasting database functions\'85\
In this COP session I am going to try my best to introduce you to most of the Rentrez functions with very basic examples.\
This means that it is not my intention to create complex query searches that demands the usage of function arguments such like use_history or web_history, which are great function arguments that allows you to store information in NCBI servers. This arguments turn very functional when doing big data queries, but because of time constraints, it is not an area we are going to touch on today. \
But there is a great Rentrez tutorial by David Winter that may teach you all the things that we may not cover in this session and that inspired this session. \
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 8: Rentrez Helper Functions\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 In this section we have four functions that allows us to get a notion of what is the state of the NCBI Databases\'85 and we will be trying them one by one. 
\fs32 \cf2 \cb1 \outl0\strokewidth0 \strokec2 \

\fs36 \cf4 \cb3 \outl0\strokewidth0 \'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 9:
\f2\fs32 \cf2 \cb1 \outl0\strokewidth0 \strokec2  Table\
\pard\pardeftab720\sa320\partightenfactor0

\b0\fs36 \cf4 \cb3 \outl0\strokewidth0 So the first one is entrez_dbs [
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf4 entrez_dbs\cf6  \cf4 ]\
This function allows us to see how many databases exist within the NCBI Databases, and also you can see how they are named. 
\f4\b \cf4 \
\

\f2\b0 \cf4 The second one is entrez_db_summary [
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf4 entrez_db_summary\cf6  \cf4 ]\
This function allows us to see a description of the selected database. \
You can see when was the last update of the database and how many records contains
\f4\b \cf4 \
 \

\f2\b0 \cf4 The third one is entrez_db_searchable [
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf4 entrez_db_searchable\cf6  \cf4 ]
\f4\b \cf4 \
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0\fs32 \cf4 \cb1 This function allow us to see search fields that each database has. \
You can use this search fields to filter your query, just like you would do in PubMed. \
\
And the forth one is entrez_db_links 
\fs36 \cf4 \cb3 [
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE 
\fs32 \cf4 \cb1 entrez_db_links
\fs36 \cf6 \cb3  \cf4 ]\

\fs32 \cf4 \cb1 This function allows you to see the total of records that are linked in between databases. \
\
[
\f4\b \cf5 QUICK CHECK IN: Let me know if you have any doubts questions or issues\'85 Or if you were able to run the commands successfully just let me know with the green arrow
\f2\b0 \cf4 ]\
\pard\pardeftab720\sa320\partightenfactor0

\fs36 \cf4 \cb3 \'97
\fs32 \cf4 \cb1 \
\pard\pardeftab720\sa320\partightenfactor0

\f4\b\fs36 \cf4 \cb3 SLIDE 10:
\fs32 \cf4 \cb1  \cf4 Performing searches in NCBI API\cf4 \
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 Now, we are going to learn what are the different functions that allow us to get data from NCBI Databases. \cf4 \
\pard\pardeftab720\sa320\partightenfactor0

\fs36 \cf4 \cb3 \'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 11:
\fs32 \cf4 \cb1  Table
\f5\fs36 \cf2 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 \cb3 \outl0\strokewidth0 So, now we are going to learn the following 4 Rentrez functions\
entrez_search, summary, fetch and extract from summary. \
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 12:
\fs32 \cf4 \cb1  
\fs36 \cf4 \cb3 entrez_search
\f2\b0 \cf4 \
So the first one is entrez_search \
This function allows us to perform simple or boolean searches. \
\
[
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf7 SIMPLE SEARCH\cf6  WITH \cf4 entrez_search\cf6  \cf4 ]\
\'97  pcos_pm <- entrez_search(db="pubmed", term = "pcos[all]\'94)  \'97\
So let\'92s get to know the syntax of this function. \
\
Let\'92s create a variable to save the results of this search. \
Im interested in using the PubMed database to search any publication related to Polyquistic Ovary Syndrome or for short PCOS. \
Im going to call my variable pcos_pm\'85pm meaning pubmed.  \
Now, Im going to call the function, entrez_search, parenthesis, and the first argument that requires is the database. \
In the db argument, Im going to put the name of the database, in my case pubmed, in quotation marks.\
Then Im going to put a comma. \
And my next argument is term. \
In the term argument, I\'92m going to put PCOS in quotation marks, and in brackets I am going to put the word all, so that it searches for that word in all search fields. \
Just as you would do in the PubMed website\
\
And now, let\'92s view our results. \
In here you can see that Rentez was able to fetch a list of ids, that it encountered over 15 thousand articles that may have the term PCOS or may be related to, and an important feature here is the Query translation, in which you can see how the NCBI API interpreted your search. \
\
Now let\'92s perform a boolean search. \
[
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf7 BOOLEAN SEARCH\cf6  WITH \cf4 entrez_search\cf6  \cf4 ]\
\'97  pcos_ir_ct_pm <- entrez_search(db="pubmed", term= "pcos[all] AND insulin resistance[all] AND Clinical Trial[ptyp]\'94)  \'97\
\
I\'92m interested in continuing my search about PCOS. \
So people with PCOS often develop insulin resistance\'85 an now Im interested in what Clinical Trials have been done about this topic. \
Again, Im going to save my searches in a variable called pcos_ir_ct_pm, ir standing for insulin resistance, ct for clinical trial and pm for pubmed. \
It is a really long name, but you can be as short and creative as you want to as long as you are following R rules to name variables. \
\
Im going to call the function, entrez_search, parenthesis\'85\
and going to put my first argument, db equals pubmed, comma\'85\
And now my second argument term equals and my query just as I would write it in the PubMed website pcos[all] AND insulin resistance[all] AND Clinical Trial[ptyp]\'85 all of it in quotation marks. \
\
Lets hit enter and see what are our results\
The return values are similar to what we got in our first search. We have the list of ids, amount of total articles found, and query translation\'85 \
\
\pard\pardeftab720\sa320\partightenfactor0

\fs32 \cf4 \cb1 [
\f4\b \cf6 QUICK CHECK IN: Before moving with the next function, I want to check in. If you were able to follow, let me know with the green arrow, if not\'85 you can unmute or share in the chat your issue. 
\f2\b0 \cf4 ]
\fs36 \cf4 \cb3 \
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 13:
\fs32 \cf4 \cb1  
\fs36 \cf4 \cb3 entrez_summary \
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 Now moving to the second function\'85 \
This is the entrez_summary()\
This function allows you to retrieve basic information about the article/object you are searching for. \
So, with the entrez_search, we searched for ids related to our search term, and with entrez_summary we are going to retrieve bibliographic information about the articles entrez_search found. \
\
[
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf7 SIMPLE SEARCH\cf6  WITH \cf4 entrez_summary\cf6  \cf4 ]\
\'97 summary_pcos_pm <- entrez_summary(db="pubmed", id=pcos_pm$ids, rettype = "xml") \'97 \
So let\'92s get to know the syntax of this function. \
\
So first, I want to save the results of this function so I\'92m going to create a variable called summary_pcos_pm. \
Im going to call the function entrez_summary, open parenthesis and our first argument is db, meaning database\'85 \
So in quotation marks Im going to put pubmed, in lowercase...\
Then a coma, and then the next argument is id. This argument can recieve a list of ids or one id. \
Im going to use the variable that I created to saved the ids, in my case that would be pcos_pm\'85\
Then dollar sign and then the word ids, which is a list of ids.\
\
Now lets view our results\'85 \
So, what this function returns is what Rentrez calls an esummary object, which is a unique object from the Rentrez library. \
An esummary object a list of ids, where each id contains bibliographic information of the id\'85.\
So if we, expand one of the ids, we can see information related to publication dates, authors, title, journal, publication type and more\
\
\pard\pardeftab720\sa320\partightenfactor0

\fs32 \cf4 \cb1 [
\f4\b \cf6 QUICK CHECK IN: Before moving with the next function, I want to check in. If you were able to follow, let me know with the green arrow, if not\'85 you can unmute or share in the chat your issue. 
\f2\b0 \cf4 ]
\fs36 \cf4 \cb3 \
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 14:
\fs32 \cf4 \cb1  
\fs36 \cf4 \cb3 entrez_fetch\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 Now, the third function function is entrez_fetch\'85.\
Since entrez_fetch is similar to entrez_summary. Both functions will allow you to extract data from the NCBI API. \
But the difference between entrez_summary and entrez_fetch is in the way that they arrange the information in RStudio.\
The entrez_summary returns a dataframe with lists of records while entrez_fetch returns an XML document.\
\
[
\f4\b \cf6 LIVE SECTION DEMONSTRATION
\f2\b0 : DEMO HOW TO USE \cf7 SIMPLE SEARCH\cf6  WITH \cf4 entrez_fetch\cf6  \cf4 ]\
And as you can see, it has the same syntax as entrez_summary, but we need to add a new argument that is rettype. \
And rettype what is asking is for the data structure that you would like to receive the information. \
In the past, the NCBI API supported JSON data structure, but now they have defaulted to XML. \
That means that in the rettype argument, by default we need to put xml. \
\
Now let\'92s take a minute to contrast the results that esummary and efetch returns.\
We can see that esummary returns lists that we can use in R to do calculations, do some graphs\'85 \
While efetch returns an xml document that needs to be manipulated in order to get information about the article or digital object. \
So to resolve that, rentrez has created a function that allows you to extract information from each metadata field avoiding the challenges that comes with navigating an XML parsed documents.\
\'97\
\pard\pardeftab720\sa320\partightenfactor0

\f4\b \cf4 SLIDE 15:
\fs32 \cf4 \cb1  
\fs36 \cf4 \cb3 extract_from_esummary\
\pard\pardeftab720\sa320\partightenfactor0

\f2\b0 \cf4 And that function that help us navigate the lists that esumary created is extract_from_esummary\
	
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
}